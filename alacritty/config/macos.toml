[keyboard]
bindings = [
  { key = "Q", mods = "Super",       action = "None" },
  { key = "W", mods = "Super",       action = "None" },
  { key = "W", mods = "Super|Shift", action = "Quit" },
  { key = "N", mods = "Super|Shift", command = { program = "/Applications/Alacritty.app/Contents/MacOS/alacritty", args = ["-e", "zsh", "-l"] } },
  { key = "U", mods = "Super",       command = { program = "/Applications/Alacritty.app/Contents/MacOS/alacritty", args = ["-e", "zsh", "-l", "-c", "exec nu"] } },
]

[window]
decorations = "buttonless"

[shell]
program = "zsh"
args = ["-l", "-c", "TERM=alacritty-direct tmux"]

### On paths ###
## For alacritty:
# If installed by homebrew, there will be a symlink made by brew which is not guaranteed to be in
# the $PATH for all OSX installations. However, the full path is stable and independent of how
# alacritty was installed
#
## For the shell:
# There are three layers happening here:
# - The outer context has no zshenv or zprofile or any shell initialization script, so it must
#   reference a bin that is always available.
# - Then, inside zsh, the command will run in script mode, if used with `-c`. Therefore, ~/.zshrc
#   is not called. However, ~/.zshenv is. This means that any tmux scripts will run within that
#   context. It may be adviseable to have the full login shell configured before exec'ing tmux.
#   This might be necessary if any command is relying on /usr/local/bin being injected (intel)
# - Then, inside tmux, zsh will be run in full interactive login mode.
# This is not performance critical as it is just whenever a new alacritty window is open, which
# tends to be rare since mostly new panes and windows are created within tmux itself
