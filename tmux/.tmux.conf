# unbind C-b
# set -g prefix C-a
# bind C-a send-prefix

# Simulate Vim command binding
unbind ';'
bind ';' command-prompt
bind -T copy-mode-vi -n ';' command-prompt
bind ' ' switch-client -T leader
bind -T leader ' ' next-layout

# Open word in editor
bind -T copy-mode-vi C-g run "tmx edit"

# Match word separators with alacritty
set -g word-separator ",│`|\"' ()[]{}<>\t"

# Quick switch
bind b select-pane -l
bind -T leader b last-window

# Simulate macros
bind A new-window 'vi ~/tmp/tmux-macro'
bind a source-file ~/tmp/tmux-macro

# 0 is too far from ` ;)
set -g base-index 1

# Automatically set window title
setw -g automatic-rename on
setw -g automatic-rename-format '#{s|#(basename $SHELL)|#{s|'$HOME'|~|:pane_current_path}|:pane_current_command}'
set -g set-titles on
set -g pane-border-line heavy

set -g status-keys vi
set -g history-limit 10000

setw -g mode-keys vi
setw -g monitor-activity off
set -g mouse on

# Quick split
bind v split-window -c "#{pane_current_path}" -h
bind s split-window -c "#{pane_current_path}" -v

# Vim style pane selection
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Vim style leader window selection
bind -T leader h previous-window
bind -T leader l next-window

# Resizing panes with Shift
bind -r C-j resize-pane -D 5
bind -r C-k resize-pane -U 5
bind -r C-h resize-pane -L 5
bind -r C-l resize-pane -R 5

# Use Ctrl-Alt-vim keys without prefix key to switch panes
bind -n C-M-h select-pane -L
bind -n C-M-j select-pane -D
bind -n C-M-k select-pane -U
bind -n C-M-l select-pane -R

# Use Alt-arrow keys without prefix key to switch panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# Equally split windows
bind = select-layout even-horizontal
bind - select-layout even-vertical

# Unequally split windows
bind -T leader '=' select-layout main-vertical
bind -T leader '-' select-layout main-horizontal

# Main lalyout
set-option -g main-pane-width 66%
set-option -g main-pane-height 66%
set-option -g pane-active-border-style 'fg=colour208'

# Popups for side-tasks
bind C-q if-shell '[[ "#{session_name}" == scratch-* ]]' \
  detach-client \
  'popup -d "#{pane_current_path}" -E -w "90%" -h "90%" "tmux new -A -s scratch-$(tmux display-message -p \"#{session_id}#{window_id}\")"'
bind C-w if-shell '[ "#{window_name}" = "scratch" ]' \
  last-window \
  'new-window -S -c "#{pane_current_path}" -n scratch'
bind C-g popup -d "#{pane_current_path}" -E -w "90%" -h "90%" lazygit
set-hook -g window-unlinked 'run "${HOME}/bin/tmx clear_scratches"'

# Clear history
bind C-x clear-history

# Vi mode
bind -T copy-mode-vi H send-keys -X start-of-line
bind -T copy-mode-vi L send-keys -X end-of-line
bind -T copy-mode-vi C-j send-keys -X -N 5 scroll-down
bind -T copy-mode-vi C-k send-keys -X -N 5 scroll-up

# No delay for escape key press
set -sg escape-time 0

# Toggle sync panes
bind i set-window-option synchronize-panes

# Enable true color
set -g default-terminal tmux-256color

# Reload tmux config
bind r source-file ~/.tmux.conf \; display "Reloaded"

# THEME
set-option -g status on
set-option -g status-interval 2
# set-option -g status-utf8 on
# set-option -g status-justify "centre"
set-option -g status-left-length 60
set-option -g status-right-length 90
set -g status-bg colour235
set -g status-fg colour121

# Auto generated local file
source-file ~/.tmux.conf.local
set-option -g window-status-current-format '#[fg=colour235,bg=colour208]#I#[fg=colour208,bg=colour235] #W '
set-option -g window-status-format '#[fg=colour235,bg=colour234]#[fg=colour248,bg=colour234]#I#[fg=colour234,bg=colour235]#[fg=colour244] #W '
set-option -g window-status-separator ''
set-option -g window-status-activity-style 'bg=colour235,fg=colour121'
