####################
# Top level binding
####################

# Simulate Vim command binding
unbind \;
bind \; command-prompt
bind -T copy-mode-vi -n \; command-prompt
bind Space switch-client -T leader

####################
# Bindings
####################

# Normal
####################

# Switch layout
bind -r 0 next-layout

# Quick split
bind v split-window -c "#{pane_current_path}" -h
bind s split-window -c "#{pane_current_path}" -v

# Reload tmux config
bind r source-file ~/.config/tmux/tmux.conf

# Toggle sync panes
bind i set-window-option synchronize-panes

# Clear history
bind C-x send-keys -R Enter \; clear-history

# Disable key bindings
bind -n C-M-q \
  set prefix None \; \
  set key-table inner \; \

bind -T inner C-M-q \
  set -u prefix \; \
  set -u key-table \; \

# Nushell
bind u split-window -h -c "#{pane_current_path}" nu
bind U split-window -v -c "#{pane_current_path}" nu
bind -T leader u new-window nu

# Make suspend harder to do
unbind C-z
bind -T leader C-z suspend-client

# Vi
####################

# Simulate vim
bind -T copy-mode-vi H send-keys -X start-of-line
bind -T copy-mode-vi L send-keys -X end-of-line
bind -T copy-mode-vi C-j send-keys -X -N 5 scroll-down
bind -T copy-mode-vi C-k send-keys -X -N 5 scroll-up

####################
# Options
####################

# 0 is too far from ` ;)
set -g base-index 1

# No delay for escape key press
set -sg escape-time 0

# Allow focus events to be transmitted down
set -g focus-events on

# Enable true color
set -g default-terminal tmux-256color
%if #{==:#{=9:TERM},alacritty}
set -ga terminal-features ",alacritty*:usstyle"
%endif

# Crank up the scroll back
set -g history-limit 10000

# Use vim bindings in copy mode and command line
set -g status-keys vi
set -g mode-keys vi

# Some mouse action
set -g mouse on

# Make tmux split distinguishable from vim's
%if #{>=:#{version},3.2}
set -g pane-border-line heavy
%endif

# Give me more than 750ms so that I can properly read
set -g display-time 3000

####################
# Utilities
####################

# Simulate macros
bind A new-window 'vi ~/tmp/tmux-macro'
bind a source-file ~/tmp/tmux-macro

# Open word in editor
bind -T copy-mode-vi C-g run "~/.config/tmux/script/edit.sh"

# Match word separators with alacritty
set -g word-separator ",│`|\"' ()[]{}<>\t"

# Popups for side-tasks
bind C-q if-shell '[[ "#{session_name}" == scratch-* ]]' \
  detach-client \
  'popup -d "#{pane_current_path}" -E -w "90%" -h "90%" "tmux new -A -s scratch-$(tmux display-message -p \"#{session_id}#{window_id}\")"'
set-hook -g window-unlinked 'run "~/.config/tmux/script/clear_scratches.sh"'

bind C-u if-shell '[[ "#{session_name}" == scratch-* ]]' \
  detach-client \
  'popup -d "#{pane_current_path}" -E -w "90%" -h "90%" "tmux new -A -s scratch-$(tmux display-message -p \"#{session_id}#{window_id}\") nu"'
set-hook -g window-unlinked 'run "~/.config/tmux/script/clear_scratches.sh"'

# Scratch window
bind C-w if-shell '[ "#{window_name}" = "scratch" ]' \
  last-window \
  'new-window -S -c "#{pane_current_path}" -n scratch'

# Lazygit
%if #{>=:#{version},3.2}
bind C-g popup -E -w "90%" -h "90%" -d "#{pane_current_path}" lazygit
%endif

####################
# Panes
####################

# Select
####################

# Use Ctrl-Alt-vim keys without prefix key to switch panes
bind -n C-M-h select-pane -L
bind -n C-M-j select-pane -D
bind -n C-M-k select-pane -U
bind -n C-M-l select-pane -R

# Last
bind b last-pane

# Layout
####################

# Resizing panes with Ctrl
bind -r C-j resize-pane -D 5
bind -r C-k resize-pane -U 5
bind -r C-h resize-pane -L 5
bind -r C-l resize-pane -R 5

# Equally split windows
bind = select-layout even-horizontal
bind - select-layout even-vertical

# Unequally split windows
bind -T leader '=' select-layout main-vertical
bind -T leader '-' select-layout main-horizontal

# Swap
bind -r h swap-pane -d -t '.{left-of}'
bind -r j swap-pane -d -t '.{down-of}'
bind -r k swap-pane -d -t '.{up-of}'
bind -r l swap-pane -d -t '.{right-of}'

# Move to split
bind s if-shell 'test #{pane_marked_set} -eq 1' 'join-pane -v' 'split-window -v -c "#{pane_current_path}"'
bind S if-shell 'test #{pane_marked_set} -eq 1' 'join-pane -v -b'
bind v if-shell 'test #{pane_marked_set} -eq 1' 'join-pane -h' 'split-window -h -c "#{pane_current_path}"'
bind V if-shell 'test #{pane_marked_set} -eq 1' 'join-pane -h -b'

# Options
####################

# Main layout
%if #{>=:#{version},3.2}
set -g main-pane-width 66%
set -g main-pane-height 66%
%endif
set -g pane-active-border-style 'fg=colour208'

####################
# Windows
####################

# Select
####################

# Vim style jump window selection
bind -n C-M-i previous-window
bind -n C-M-o next-window

# Last
bind -T leader b last-window

# Condense ids
bind -T leader 0 run "~/.config/tmux/script/condense_windows.sh"

# Layout
####################

# Ctrl-Shift to swap windows
bind -n C-M-u swap-window -t -1 \; previous-window
bind -n C-M-p swap-window -t +1 \; next-window

# Move to new window
bind c if-shell 'test #{pane_marked_set} -eq 1' 'break-pane -s "{marked}"' 'new-window'

####################
# Status line
####################

# Options
####################

set -g status on
set -g status-interval 2
set -g status-position top

# Left
####################

set -g status-left-length 20
set -g status-left "#[fg=colour248,bg=colour239] #{session_id} #{window_id} #{pane_id} #[fg=colour239,bg=colour235]#{?#{==:#{key-table},root},, #[fg=magenta]#[fg=colour239] }"

# Right
####################

set -g status-right-length 120
set -g status-right "#(~/.config/tmux/script/status_right.sh #{pane_current_path})"

# Center
####################

# Window naming
set -g automatic-rename on
set -g automatic-rename-format '#{s|#(basename $SHELL)|#{s|'$HOME'|~|:pane_current_path}|:pane_current_command}'
set -g set-titles on

# Render activity differently
set -g monitor-activity on

# Format the status line
set -g status-bg colour235
set -g status-fg colour121
set -g window-status-current-format '#[fg=colour235,bg=colour208]#(tmux has-session -t '"'"'scratch-#{session_id}#{window_id}'"'"' && echo "󱂬 ")#{?pane_synchronized, ,}#{?window_zoomed_flag, ,}#{?window_marked_flag, ,}#I#[fg=colour208,bg=colour235] #W'
set -g window-status-format '#[fg=colour235,bg=colour234]#[bg=colour234]#{?window_last_flag,#[fg=white],#[fg=colour248]}#{?window_activity_flag, ,}#(tmux has-session -t '"'"'scratch-#{session_id}#{window_id}'"'"' && echo "󱂬 ")#{?window_marked_flag, ,}#I#[fg=colour234,bg=colour235] #[fg=colour244]#W'
set -g window-status-separator ' '
set -g window-status-activity-style 'none'
set -g window-status-bell-style 'none'

####################
# Local
####################

# Auto generated local file
source-file ~/.config/tmux/local.conf
